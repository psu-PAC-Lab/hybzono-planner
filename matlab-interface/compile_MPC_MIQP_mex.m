% include paths
includePaths = {'../extern/eigen', ...
    '../qp-custom/cpp/include', ...
    '../mi-solver/include', ...
    '../mpc-classes/include', ...
    '../extern/zonocpp/include'};

% source files
srcFiles = {'MPC_MIQP_mex.cpp', ...
    'mex_set_methods.cpp', ...
    '../mpc-classes/src/MPC_MIQP.cpp', ...
    '../mpc-classes/src/MPC_QP.cpp', ...
    '../qp-custom/cpp/src/QP_primal_dual_mpc.cpp', ...
    '../qp-custom/cpp/src/QP_primal_dual.cpp', ...
    '../mi-solver/src/Data.cpp', ...
    '../mi-solver/src/LeavesQueue.cpp', ...
    '../mi-solver/src/MI_MPC.cpp', ...
    '../mi-solver/src/Node.cpp', ...
    '../mi-solver/src/VerboseOutputs.cpp', ... 
    '../mi-solver/src/DataVolatile.cpp'};

% compiler option
if ispc % windows
    compiler_option = '/std:c++17';
elseif isunix % linux
    compiler_option = '-std=c++17';
else
    error('what compile flag to use for mac?')
end

% compile
for ii = 1:length(includePaths)
    includePaths{ii} = ['-I"', includePaths{ii}, '"'];
end

mex('-v', srcFiles{:}, includePaths{:}, ...
     ['COMPFLAGS="$COMPFLAGS ' compiler_option '"']);